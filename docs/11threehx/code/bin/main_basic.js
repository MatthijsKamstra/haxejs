// Generated by Haxe 4.0.0+ef18b627e
(function ($global) { "use strict";
var Main = function() { };
Main.update = function(time) {
	window.requestAnimationFrame(Main.update);
	Main.mesh.rotation.x += 0.01;
	Main.mesh.rotation.y += 0.02;
	Main.mesh.rotation.z += 0.03;
	Main.renderer.render(Main.scene,Main.camera);
};
Main.handleWindowResize = function(e) {
	var w = window.innerWidth;
	var h = window.innerHeight;
	Main.camera.aspect = w / h;
	Main.camera.updateProjectionMatrix();
	Main.renderer.setSize(w,h);
};
Main.main = function() {
	window.onload = function() {
		Main.canvas = window.document.createElement("canvas");
		window.document.body.appendChild(Main.canvas);
		Main.renderer = new THREE.WebGLRenderer({ antialias : true, canvas : Main.canvas});
		Main.renderer.setSize(window.innerWidth,window.innerHeight);
		Main.scene = new THREE.Scene();
		Main.camera = new THREE.PerspectiveCamera(45,window.innerWidth / window.innerHeight,0.01,10000);
		Main.camera.position.set(0,100,300);
		Main.camera.lookAt(Main.scene.position);
		Main.scene.add(Main.camera);
		var light1 = new THREE.PointLight(255,2);
		light1.position.set(100,30,100);
		Main.scene.add(light1);
		Main.scene.add(new THREE.PointLightHelper(light1,10));
		var light2 = new THREE.PointLight(16711680,2);
		light2.position.set(-100,30,100);
		Main.scene.add(light2);
		Main.scene.add(new THREE.PointLightHelper(light2,10));
		var geometry = new THREE.BoxGeometry(50,50,50,1,1,1);
		var materials = [new THREE.MeshPhongMaterial({ color : new THREE.Color(0), shininess : 100}),new THREE.MeshBasicMaterial({ color : new THREE.Color(16777215), wireframe : true})];
		Main.mesh = new THREE.Group();
		var _g = 0;
		while(_g < materials.length) {
			var m = materials[_g];
			++_g;
			Main.mesh.add(new THREE.Mesh(geometry,m));
		}
		Main.scene.add(Main.mesh);
		window.addEventListener("resize",Main.handleWindowResize,false);
		window.requestAnimationFrame(Main.update);
	};
};
Main.main();
})({});

//# sourceMappingURL=main_basic.js.map